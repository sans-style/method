<h1>{{title}}</h1>
<p>Welcome to {{title}}</p>

<!--This is the list of pages that have been ordered into a tree structure-->
<div id ="pagesList">
<ul>
	<li class = "pageListItem noSelect" name = "root" id = "root" data-pageId = "0">Root</li>
{{#each pages}}
	<li class = "pageListItem noSelect" name = "pageLabel{{this.id}}" id = "pageLabel{{this.id}}" data-pageId = "{{this.id}}">{{{this.label}}}</li>
{{/each}}
</ul>
</div>

<!--This element displays a message that informs the user which page directory is currently selected-->
<p id="pageSelectionMessage">default message</p>

<!--This form is responsible for gathering text input from the user in order to add a new page to the database accepts[a-z0-9.]-->
<!--Currently the newPageName is checked by the server to see if it already exists, would be good to change this to client side-->
<form id= "newPageForm" name = "newPageForm" action="/" method = "post">
<input class = "hidden selectedPageInfo" name = "newPageSelectedPageId" value = "{{selectedPage}}">
<input name = "newPageName" id="newPageName" type="text" placeHolder = "Enter new Page Name" required pattern = "[a-z0-9.]+">
<input type="button" value = "Create new Page" onclick="return checkNewPageName()">
</form>

<!--This form is responsible for displaying the current journal entry for the selected page/version. It can also be edited by the user to make a new entry-->
<!--Currently the inputField is checked by the server to see if it is different from the most recent version-->
<form id = "textAreaForm" name = "textAreaForm" action="/" method = "post">
<input class = "hidden selectedPageInfo" name = "textAreaSelectedPageId" value = "{{selectedPage}}">
	<input type = "button" value = "Save" onclick="return checkJournalText()">
	<textarea style = "white-space: pre-wrap" name = "inputField" id = "inputField" rows = "20" cols = "100">{{placeHoldText}}</textarea>
</form>

<!--This is a drop down menu that is populated with the times of the previous versions and can be used to populate the textArea with the previous versions entry-->
<div id = "versionSelectionForm">
<input class = "hidden selectedPageInfo" name = "versionSelectionSelectedPageId" value = "{{selectedPage}}">

<select name="versionSelection" id = "versionSelection">

	{{#each versionTimes}}
	<option value = "{{this.number}}">{{this.date}}</option>
	{{/each}}
	
</select>
</div>

<p id = "debugText">{{error}}</p>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

<script>

var defaultDisplayedText = "{{placeHoldText}}";
var selectedPage = {{selectedPage}};
var currentPagePath = "";
var pagesTitlesArray = [];
var pagesPathArray = [];
var pagesDataArray = [];
var versionsArray = [];
var pageVersions = [];
var journalText = "";
var re = /\r\n/g;
journalText = journalText.replace(re, "<br>");
defaultDisplayedText = defaultDisplayedText.replace(re, "<br>");


{{#each pages}}
	pagesTitlesArray.push("{{this.name}}");
	pagesPathArray.push("{{this.path}}");
	journalText = "{{this.data}}";
	journalText = journalText.replace(re, "<br>");
	pagesDataArray.push(journalText);
	pageVersions = [];
	{{#each this.versions}}
		pageVersions.push("{{this.date}}");
	{{/each}}
	versionsArray.push(pageVersions);
{{/each}}

console.log(versionsArray);

//This function is called when the user attempts to save a new journal entry the entry is checked against the latest version for differences
function checkJournalText() {
	let userInput = $("#inputField").val();
	let messageString = $("#pageSelectionMessage").html();
	console.log("messageString: " + messageString);

	if(selectedPage==0) {
		messageString += "<br>Error: Can only make new pages on root";
		$("#pageSelectionMessage").html(messageString);
		return false;
	}
	else if (userInput===journalText) {
		messageString += "<br>Error: Latest version is identical";
		$("#pageSelectionMessage").html(messageString);
		return false;		
	}
	else {
		document.textAreaForm.submit();
	}
}

//
function checkNewPageName() {
	let userInput = $("#newPageName").val();
	let messageString = $("#pageSelectionMessage").html();
	let errorCondition = false;
	let requestedPagePath = currentPagePath + "/" + userInput;
	
	console.log("RequestedPagePath: " + requestedPagePath);
	
	for(let i = 0; i<pagesPathArray.length ; i++) {
		if(pagesPathArray[i]===requestedPagePath) {
		console.log("Error match with " + pagesPathArray[i]);
		errorCondition = true;
		}
	}
	
	if(errorCondition) {
		console.log("error");
		return false
	}
	else {
		document.newPageForm.submit();
	}
	
}

$("document").ready(function(){

	if(selectedPage===0) {
		$("#versionSelection").addClass("hidden");
	}

	//this code is responsible for requesting a particular version of a page and displays the response in the textarea
	$("#versionSelection").change(function() {
	let selectedVersion = $("#versionSelection").val();
	console.log("requesting version: " + selectedVersion);
		$.getJSON("/db/retrieve", {selectedPageId: selectedPage, requestedVersion: selectedVersion}, function(data) {
			$("#inputField").html(data.journalText);
		});
	});
	
	//set default values based on selected page
	$("#pageSelectionMessage").html("Current Page : " + "{{selectedPagePath}}" + "<br>Current Note : {{placeHoldText}}");
	
	$("#inputField").html(defaultDisplayedText);
	
	//these functions are responsible for displaying the appropriate information when the user clicks on a given page
	//It is also responsible for changing the hidden inputfields so that the server will know what the selcetedPage is
	$("#root").click(function(){
		
		$("#pageSelectionMessage").html("Current Page : Root<br>CurrentNote : " + "root note");
		
		$("#inputField").html("root note");
		
		$(".selectedPageInfo").each(function(){
			$(this).attr("value", "0");
		});
		selectedPage = 0;
		currentPagePath = "/";
		$("#versionSelection").addClass("hidden");
	});
	
	{{#each pages}}
	
	$("#pageLabel{{this.id}}").click(function(){
		
		$("#pageSelectionMessage").html("Current Page : " + "{{this.path}}<br> CurrentNote : " + "{{this.data}}");
		$("#inputField").html("{{this.data}}");
		journalText = "{{this.data}}";
		$(".selectedPageInfo").each(function(){
			$(this).attr("value", "{{this.id}}");
		});
		selectedPage = {{this.id}};
		currentPagePath = "{{this.path}}";
		
		let htmlString = "";
		let i = 0;
		let j = 0;
		//console.log("{{@index}}");
		i = {{@index}};
		console.log("i = " + i);
		
		{{#each this.versions}}
			j = {{@index}} {{this.versions}};
			htmlString += '<option value = "' + j + '">' + versionsArray[i][j] + '</option>';
		{{/each}}

		$("#versionSelection").html(htmlString);
		
		$("#versionSelection").removeClass("hidden");
	});
	

	
	{{/each}}
});



</script>
